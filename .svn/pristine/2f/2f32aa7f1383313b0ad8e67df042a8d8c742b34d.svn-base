<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	
	
	 <!-- 开启自动扫包 -->
	 <context:component-scan base-package="cn.com.zhiding">
	   <!--制定扫包规则，不扫描@Controller注解的JAVA类，其他的还是要扫描  -->
	     <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	 </context:component-scan>
	
	<!-- 启动AOP支持 -->
	<aop:aspectj-autoproxy/>
	
	<!-- 引入外部数据源配置信息 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:datasource.properties</value>
		</property>
	</bean>
	<!-- 线程中引入spring注入的bean对象 -->
	<bean class="cn.com.zhiding.util.SpringContextUtil"></bean>
	
	<!-- 配置数据源 <一>-->
	<bean id="dataSourceMaster" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${master.jdbc.driver}"></property>
		<property name="url" value="${master.jdbc.url}"></property>
		<property name="username" value="${master.jdbc.username}"></property>
		<property name="password" value="${master.jdbc.password}"></property>
	</bean>
	
	<!-- 配置数据源 <二>-->
	<bean id="dataSourceSlave" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${slave.jdbc.driver}"></property>
		<property name="url" value="${slave.jdbc.url}"></property>
		<property name="username" value="${slave.jdbc.username}"></property>
		<property name="password" value="${slave.jdbc.password}"></property>
	</bean>
	
	<!-- 多数据源配置 -->
	<bean id ="dataSource" class="cn.com.zhiding.data.DataSource">
		<property name="defaultTargetDataSource" ref="dataSourceMaster"/>
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="master" value-ref="dataSourceMaster"/>
				<entry key="slave" value-ref="dataSourceSlave"/>
			</map>
		</property>
	</bean>
	
	
	
	<!-- 配置Session工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 加载mybatis.cfg.xml文件 -->
		<property name="configLocation" value="classpath:mybatis.cfg.xml"></property>
		<!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 -->
		<property name="typeAliasesPackage" value="cn.com.zhiding.*.entity"></property>
		<!-- mybatis映射文件的路径 -->
		<property name="mapperLocations">
			<list>
                <value>classpath*:cn/com/zhiding/*/mapper/xml/*Mapper.xml</value>
            </list>
		
		</property> 
	</bean>
	<!-- mybatis执行器 -->
	<bean id="sqlSessionTemplateSimple" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />  
	    <constructor-arg index="1" value="SIMPLE" />
    </bean>
	
	<!-- 自动扫描所有的Mapper接口与文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.com.zhiding.*.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value = "sqlSessionFactory"></property>
<!-- 		<property name="annotationClass" value="com.msyd.framework.common.persistence.annotation.MyBatisDao"></property> -->
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
    <!-- 定义个通知，指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="modify*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="figure*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />	
			<tx:method name="load*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="search*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!-- 配置一个切入点 -->
		<aop:pointcut id="serviceMethods" expression="execution(* cn.com.zhiding.*.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>
	
</beans>